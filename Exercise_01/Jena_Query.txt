
**********************Movie dataset***********************
**1**
--Question--
Names of all movies.

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
SELECT ?movie_name
WHERE{
?x rdf:type ex:Movie .
?x rdfs:label ?movie_name .
}

--Result--
-----------------------
| movie_name          |
=======================
| "Marie Antoinette " |
| "Heat"              |
-----------------------



**2**
--Question--
Names ofmovies and directors sorted descending by the year themovie appeared.

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
SELECT ?movie_name ?director
WHERE {
?x rdf:type ex:Movie .
?x rdfs:label ?movie_name .
?x ex:year ?year .
?x ex:director ?director .}
ORDER BY DESC(?year)

--Result--
----------------------------------
| movie_name          | director |
==================================
| "Marie Antoinette " | ex:p1    |
| "Heat"              | ex:p3    |
----------------------------------



**3**
--Question--
Names and directors of all movies before 1996.

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>
SELECT ?movie_name ?director
WHERE {
?x rdf:type ex:Movie .
?x rdfs:label ?movie_name .
?x ex:year ?year .
?x ex:director ?director .
FILTER(?year <= "1996"^^xsd:gYear)
}

--Result--
-------------------------
| movie_name | director |
=========================
| "Heat"     | ex:p3    |
-------------------------



**4**
--Question--
Names all movies whose genre is Crime.

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
SELECT ?movie_name
WHERE {
?x rdf:type ex:Movie .
?x rdfs:label ?movie_name .
?x ex:genre ex:Crime .
}

--Result--
--------------
| movie_name |
==============
| "Heat"     |
--------------



**5**
--Question--
Names of all actors who are above 50 (at 2016).

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#> 
PREFIX foaf:<http://xmlns.com/foaf/0.1/> 
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>
SELECT ?first_name ?family_name
WHERE {
?x rdf:type ex:Actor;
   ex:birthYear ?year;
   foaf:givenName ?first_name;
   foaf:familyName ?family_name.
FILTER(?year<"1966"^^xsd:gYear)
}

--Result--
----------------------------
| first_name | family_name |
============================
| "Al "      | "Pacino"    |
| "Robert"   | "De Niro"   |
----------------------------



**6**
--Question--
Names of all movies whose directors are above 70 (at 2016).

--Query--
PREFIX ex:<http://example.org/movies/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#> 
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>
SELECT ?movie_name
WHERE {
?x rdf:type ex:Movie;
   rdfs:label ?movie_name;
   ex:director ?director.
?director ex:birthYear ?year.
FILTER(?year<="1946"^^xsd:gYear)
}

--Result--
--------------
| movie_name |
==============
| "Heat"     |
--------------





********************Astronomical dataset***********************
**1**
--Question--
Object circling around the sun or a satellite of the sun.

--Query--
PREFIX ex:<http://example.org/planets/>
SELECT ?object 
WHERE
{{ex:Sun ex:satellite ?object.} UNION
{ex:Sun ex:satellite ?satellite.
?satellite ex:satellite ?object.}}

--Result--
-------------
| object    |
=============
| ex:Mars   |
| ex:Earth  |
| ex:Venus  |
| ex:Merkur |
| ex:Deimos |
| ex:Phobos |
| ex:Mond   |
-------------



**2**
--Question--
Objects having a satellite with an English name.

---Hint: I did some changes in the dataset to have a result.
1- I took out @en and @de from qoutation to make them meaningful and for sure to make reasonable comparisons, I think it was mistaken in last version.
2- I changed ex:Mond to ex:Moon. Because in one triple ex:Moon is the subject and in the othe other one ex:Mond is mentioned as object. But, both points on one entity with different names. 
  
--Query--
PREFIX ex:<http://example.org/planets/>
SELECT ?object
WHERE {
?object ex:satellite ?satellite.
?satellite ex:name ?name.
FILTER (lang(?name)='en')}

--Result--
------------
| object   |
============
| ex:Earth |
------------



**3**
--Question--
Objects having a satellite which are themselves satellite of another object.

--Query--
PREFIX ex:<http://example.org/planets/>
SELECT ?object
WHERE {
?object ex:satellite ?satellite.
?object2 ex:satellite ?object.}

--Result--
------------
| object   |
============
| ex:Mars  |
| ex:Mars  |
| ex:Earth |
| ex:Earth |
------------



**4**
--Question--
Objects having a satellite with an English name, which are also satellite of another object
with more than 3000 kilometers diameter.

--Query--
PREFIX ex:<http://example.org/planets/>
SELECT ?object
WHERE {
?object ex:satellite ?satellite.
?satellite ex:name ?name.
FILTER(lang(?name)='en').
?object2 ex:satellite ?object;
         ex:radius ?radius.
FILTER(?radius >= 1500).}

--Result--
------------
| object   |
============
| ex:Earth |
------------



**5**
--Question--
Objects with two ormore satellites (you can assume that differentURIs refer to different
objects).

--Query--
PREFIX ex:<http://example.org/planets/>
SELECT ?object
WHERE {
?object ex:satellite ?satellite1.
?object ex:satellite ?satellite2.
FILTER(?satellite1 != ?satellite2)}

--Result--
------------
| object   |
============
| ex:Sun   |
| ex:Sun   |
| ex:Sun   |
| ex:Mars  |
| ex:Mars  |
| ex:Sun   |
| ex:Sun   |
| ex:Sun   |
| ex:Earth |
| ex:Sun   |
| ex:Sun   |
| ex:Sun   |
| ex:Earth |
| ex:Sun   |
| ex:Sun   |
| ex:Sun   |
------------